name: Build Android APK

on:
  push:
    branches:
      - master       # master branchga push qilganda ishga tushadi
  workflow_dispatch:  # qoâ€˜lda ham ishga tushirish imkoniyati

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Setup EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Configure Android Keystore
        run: |
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/my-release-key.keystore

      - name: Start Android Build
        id: build
        run: |
          OUTPUT=$(eas build --platform android --profile preview --non-interactive 2>&1) || {
            echo "Build command failed with output: $OUTPUT"
            exit 1
          }
          BUILD_URL=$(echo "$OUTPUT" | grep -o 'https://expo.dev/accounts/[^/]\+/projects/[^/]\+/builds/[a-f0-9-]\+' | head -1)
          if [ -z "$BUILD_URL" ]; then
            echo "Could not find build URL in output: $OUTPUT"
            exit 1
          fi
          BUILD_ID=$(basename "$BUILD_URL")
          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV

      - name: Wait for Build Completion
        run: |
          while true; do
            STATUS=$(eas build:view $BUILD_ID --json | jq -r '.status')
            echo "Build status: $STATUS"
            if [ "$STATUS" = "finished" ]; then
              break
            elif [ "$STATUS" = "errored" ]; then
              echo "Build failed"
              exit 1
            fi
            sleep 30
          done

      - name: Download APK
        run: |
          BUILD_URL=$(eas build:view $BUILD_ID --json | jq -r '.artifacts.buildUrl')
          curl -L "$BUILD_URL" -o app-preview.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-preview.apk
          path: app-preview.apk
